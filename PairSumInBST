/*************************************************************
    
    Following is the Binary Tree node structure:

    class BinaryTreeNode {

	int data;
	BinaryTreeNode left;
	BinaryTreeNode right;
	
	BinaryTreeNode(int data) {
		this.data = data;
		left = null;
		right = null;
	   }
    }

*************************************************************/
import java.util.*;
public class Solution {
	public static boolean found = false;
    public static boolean pairSumBst(BinaryTreeNode root, int k) {
		HashSet<Integer> set = new HashSet<>();
        found = false;
        fn(root,k,set);
        return found;
	}
    public static void fn(BinaryTreeNode root,int k, HashSet<Integer> set){
        if(root==null)
            return;
        
        fn(root.left,k,set);
        if(set.contains(k-root.data))
            found = true;
        else
            set.add(root.data);
        fn(root.right,k,set);
        
        return;
    }
}





