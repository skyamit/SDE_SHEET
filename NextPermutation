import java.util.* ;
import java.io.*; 
import java.util.ArrayList;
import java.util.Collections;

public class Solution 
{
	public static ArrayList<Integer> nextPermutation(ArrayList<Integer> nums) 
	{
        int swapPosition1 = -1;
        int swapPosition2 = -1;
        for(int i=nums.size()-2;i>=0;i--)
        {
            if(nums.get(i)<nums.get(i+1))
            {
                swapPosition1 = i;
                break;
            }
        }
        
        if(swapPosition1==-1)
        {
            reverse(nums,0,nums.size()-1);
            return nums;
        }
        for(int i=nums.size()-1;i>=0;i--)
        {
            if(nums.get(i)>nums.get(swapPosition1))
            {
                swapPosition2 = i;
                break;
            }
        }
        
        swap(nums,swapPosition1,swapPosition2);
        reverse(nums,swapPosition1+1,nums.size()-1);
        return nums;
    }
    
    public static void swap(ArrayList<Integer> nums,int i,int j)
    {
        int temp = nums.get(i);
        nums.set(i,nums.get(j));
        nums.set(j,temp);
    }
    
    public static void reverse(ArrayList<Integer> nums, int start,int end)
    {
        while(start<end)
        {
            swap(nums,start,end);
            start++;
            end--;
        }
	}
}
